{"version":3,"sources":["components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","components/Users/Users.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","assets/images/coffee.png","components/Header/Header.jsx","API/api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/noava.png","components/Users/User.jsx","components/Users/Users.jsx","assets/images/Spin-1s.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/app-reducer.js","components/Profile/PfileInfo/ProfileStatusWithHooks.jsx","components/Profile/PfileInfo/ProfileStatus.jsx","components/Profile/PfileInfo/ProfileDataForm.jsx","components/Profile/PfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/login.jsx","App.js","redux/redux-store.js","index.js","components/Profile/PfileInfo/ProfileInfo.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","name","validators","component","text","validate","SEND_MESSAGE","initialState","messagesData","id","message","dialogData","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Header","header","src","HeaderImg","loginBlock","isAuth","login","onClick","logout","to","itance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","GET_CAPTCHAURL_SUCCESS","captchaURL","setAuthUserData","payload","getCaptchaURLSuccess","getAuthUserData","dispatch","a","resultCode","getCaptchaURL","url","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","console","log","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","disabled","some","Users","Preloader","spinSVG","usersPage","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","compose","withAuthRedirect","getState","bind","totalCount","INITIALIZED_SUCCESS","initialized","appReducer","ProfileStatusWithKooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","initialValues","onSubmit","stylesEr","formSummaryError","Object","keys","contacts","key","ProfileDatas","isOwner","goToEditMode","profileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","descriptionBlock","large","mainPhoto","target","files","length","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likes","getUsersProfile","profileReducer","newPost","postText","Post","avaimg","likeBox","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","postsBlock","AddPostFormRedux","addPost","newPostBody","messages","Field","requiredField","MyPostsContainer","profilePage","newPostText","addPostActionCreator","Profile","profileBox","store","ProfileContainer","match","params","history","getUserStatus","refreshProfile","prevProps","file","stopSubmit","_error","Promise","reject","withRouter","maxLength20","LoginReduxForm","style","DialogsContainer","lazy","App","catchAllUnhandledErrors","PromiseRejectionEvent","alert","initilizeApp","window","addEventListener","removeEventListener","path","render","fallback","app","promise","all","reducers","combineReducers","dialogPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","basename","process","document","getElementById","maxLength","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.21825b4b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}) =>{ //деструктуризировать из пропс инпут и мета, и остаток пропс\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) =>{ //деструктуризировать из пропс инпут и мета, и остаток пропс\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} \r\n        name={name} validate={validators} component={component} {...props}/> {text}\r\n    </div>)\r\n","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {  \r\n  messagesData : [\r\n       { id: 1, message: \"Hi!\" },\r\n       { id: 2, message: \"How are you?\" },\r\n       { id: 3, message: \"Yo man!\" }\r\n     ],\r\n   dialogData : [\r\n       { name: \"Dima\", id: 1 },\r\n       { name: \"Sasha\", id: 2 },\r\n       { name: \"Maxx\", id: 3 },\r\n       { name: \"Frank\", id: 4 },\r\n       { name: \"Vatson\", id: 5 }\r\n     ],\r\n }\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  let stateCopy={...state};\r\n  //stateCopy.messagesData=[...state.messagesData];\r\n  switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n              ...state,\r\n              messagesData: [ ...state.messagesData, {id: 4, message : body} ] \r\n            }\r\n        \r\n        default:\r\n            return state;\r\n\r\n    }\r\n    }\r\n  \r\n///Create action SendMessage containers\r\nexport const sendMessageCreator = (newMessageBody) =>{\r\n    return {type : SEND_MESSAGE, newMessageBody}\r\n  }\r\n  \r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3DEyb\",\"selectedPage\":\"Users_selectedPage__1eV-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"Profile_profileBox__1NqBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1OuOu\",\"item\":\"Navbar_item__3AYK0\",\"active\":\"Navbar_active__1Ha9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1a4M6\",\"error\":\"FormsControls_error__2XdUt\",\"formSummaryError\":\"FormsControls_formSummaryError__2vLl-\"};","export default __webpack_public_path__ + \"static/media/coffee.75f4050a.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from './Header.module.css';\r\nimport HeaderImg from \"./../../../src/assets/images/coffee.png\" \r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n    <img src={HeaderImg}></img> \r\n    <div className={styles.loginBlock}>\r\n      {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button> </div> :\r\n      <NavLink to='/login'>Login</NavLink> }\r\n    </div>\r\n  </header>\r\n  )}\r\n///https://img.icons8.com/dusk/344/kawaii-coffee.png\r\n  export default Header;\r\n\r\n  ","import * as axios from \"axios\"\r\n\r\n\r\nconst itance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\" : \"d9eea707-3f90-4d7c-91bc-e65897e18db0\"},\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/'\r\n}\r\n); \r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) { //Принимает значения от того кто вызывает ф-ю(а там она в пропсах)\r\n    return itance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data) //верни из запроса response.data\r\n    },\r\n    follow(userId) {\r\n        return itance.post(`follow/${userId}`)\r\n                \r\n    },\r\n    unfollow(userId) {\r\n        return itance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return itance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return itance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return itance.put(`profile/status/`, {status:status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return itance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type' : 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return itance.put(`profile`, profile)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return itance.get(`auth/me`);\r\n                },\r\n    login (email, password, rememberMe = false, captcha=null) {\r\n        return itance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n            },\r\n    logout () {\r\n        return itance.delete(`auth/login`);\r\n             }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL () {\r\n        return itance.get(`security/get-captcha-url`);\r\n                },\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../API/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHAURL_SUCCESS = 'GET_CAPTCHAURL_SUCCESS'\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth : false,\r\n    captchaURL : null\r\n      \r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.payload,  // в созданом обьекте data будет лежать id email login (перезатрут ...state)\r\n                }\r\n        case GET_CAPTCHAURL_SUCCESS:\r\n            return {\r\n                ...state, \r\n                ...action.payload,  // в созданом обьекте data будет лежать id email login (перезатрут ...state)\r\n                        }\r\n\r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>{  \r\n        return {type : SET_USER_DATA, payload : {userId, email, login, isAuth}}\r\n  }\r\nexport const getCaptchaURLSuccess = (captchaURL) =>{  \r\n    return {type : GET_CAPTCHAURL_SUCCESS, payload: {captchaURL}}\r\n}\r\n  \r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n        if(response.data.resultCode === 0) { \r\n              let {id, login, email} = response.data.data \r\n              dispatch(setAuthUserData(id, email, login, true)); \r\n            }\r\n           \r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async(dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData()); \r\n            }  else {\r\n                if (response.data.resultCode ===10){\r\n                    dispatch(getCaptchaURL())\r\n                }\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some err\" //сообщение -ответ сервера об ошибке (первое значение массива ответа)\r\n                let action = stopSubmit(\"login\", {_error: message});//стопаем всю форму с сообщением ошибки\r\n                dispatch(action);\r\n            }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getCaptchaURL = () => async(dispatch) => {\r\n    const response = await securityAPI.getCaptchaURL();\r\n        const captchaURL = response.data.url \r\n            dispatch(getCaptchaURLSuccess(captchaURL));             \r\n}\r\n\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    let response = await authAPI.logout()\r\n        if(response.data.resultCode === 0) { \r\n            dispatch(setAuthUserData(null, null, null, false)); \r\n            }            \r\n}\r\n\r\n  \r\n\r\nexport default authReducer; ","import React from \"react\";\r\nimport Header from \"./Header\"\r\nimport { connect } from \"react-redux\";\r\nimport {logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    ///this.props.toggleIsFetching(true);\r\n    // authAPI.me().then(response => {\r\n        \r\n    // if(response.data.resultCode === 0) { //resultCode === 0 - если сервер ответил что мы залогинены \r\n    //       let {id, login, email} = response.data.data //Взять данные переменных из responce.data \r\n    //       this.props.setAuthUserData(id, email, login);  //отдать редьюсеру значения. Последовательность важна (как в редьюсере)\r\n    //     }\r\n    //    // this.props.setUsers(response.data.items);        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n    //    // this.props.setTotalUsersCount(response.data.totalCount);\r\n    //    /// this.props.toggleIsFetching(false);\r\n    //     });\r\n  \r\n  \r\n  render () {\r\n    return <Header {...this.props} />\r\n  }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth : state.auth.isAuth,  //auth в редакс сторе. Передаем пропсами в Контейнер и в хедер для отображения\r\n  login : state.auth.login\r\n});\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);\r\n\r\n  ","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={`${styles.item} ${styles.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.active}>Users</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/news\" activeClassName={styles.active}>News</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/music\" activeClassName={styles.active}>Music</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n///<NavLink to=\"/settings\" className={({ isActive }) => (isActive ? styles.active : '')}>Settings</NavLink>","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n        News\r\n        </div>\r\n    )\r\n}\r\n    export default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n        Music\r\n        </div>\r\n    )\r\n}\r\n    export default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n        Settings\r\n        </div>\r\n    )\r\n}\r\n    export default Settings;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => { \r\n    if(u[objPropName] === itemId){\r\n        console.log (\"Befor\")\r\n        return {...u, ...newObjProps} \r\n    } \r\n    \r\n    return u; \r\n\r\n})\r\n\r\n}","import { usersAPI } from \"../API/api\"\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    users : [],\r\n    pageSize : 5,\r\n    totalItemsCount : 0,\r\n    currentPage : 1,\r\n    isFetching : false,\r\n    followingInProgress: []\r\n\r\n     \r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n   \r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            \r\n            return {...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                \r\n        }\r\n        case UNFOLLOW:\r\n            return {...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users} //взять копию старых Юзеров и дописать их из экшена. ТАк как их много, ставим спрет опер-р\r\n        \r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalItemsCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\r\n            return { ...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(id => id !== action.userId) }\r\n                    \r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const followSuccess = (userId) =>{  //follow action creator - Чистая функция которая возвращает экшн\r\n    return {type : FOLLOW, userId}\r\n  }\r\nexport const unfollowSuccess = (userId) =>{\r\n    return {type : UNFOLLOW, userId}\r\n  }\r\n\r\nexport const setUsers = (users) => { //AC котрый будет устанавливать юзеров\r\n    return {type : SET_USERS, users}\r\n}\r\nexport const setCurrentPage = (currentPage) =>{\r\n    return {type : SET_CURRENT_PAGE, currentPage}\r\n  }\r\nexport const setTotalItemsCount = (totalItemsCount) =>{\r\n    return {type : SET_TOTAL_COUNT, count:totalItemsCount} \r\n}\r\nexport const toggleIsFetching = (isFetching) =>{\r\n    return {type : TOGGLE_IS_FETCHING, isFetching} \r\n}\r\nexport const toggleFollowingInProgress = (isFetching, userId) =>{\r\n    return {type : TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} \r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\nreturn async(dispatch) => {\r\n            dispatch (toggleIsFetching(true));\r\n            dispatch(setCurrentPage(currentPage));\r\n\r\n            let data = await usersAPI.getUsers(currentPage, pageSize);\r\n            dispatch(toggleIsFetching(false));   ///загрузка странички\r\n            dispatch(setUsers(data.items));        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n            dispatch(setTotalItemsCount(data.totalCount));\r\n        }\r\n}\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch (toggleFollowingInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n        if (response.data.resultCode === 0){\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch, getState) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n        ///////////////\r\n        }\r\n    }\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n            }\r\n        }\r\n\r\nexport default usersReducer; ","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize/100);\r\n        let pages = [] ; //создаем пкстой массив для страниц\r\n        for (let i=1; i <= pagesCount; i++){ // забиваем кол-во страниц в массив\r\n            pages.push(i);\r\n        }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize ;\r\n\r\n    return <div>\r\n            {portionNumber > 1 && \r\n            <button onClick={()=> {setPortionNumber(portionNumber-1) }}>Prev</button>}\r\n\r\n                {pages.filter(p=> p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                        .map((p) => {\r\n                            return <span className={cn ({\r\n                                [styles.selectedPage]: currentPage === p \r\n                            }, styles.pageNumber) }\r\n                            key = {p}\r\n                            onClick={(e)=> {\r\n                                onPageChanged(p);\r\n                            }}>{p}  </span> \r\n                        })}\r\n            {portionCount > portionNumber && \r\n                <button onClick={()=> {setPortionNumber(portionNumber+1)}}>Next</button>}\r\n            </div>\r\n            \r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/noava.ca1de5bf.png\";","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from \"./../../../src/assets/images/noava.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = (props) => {  \r\n    let u = props.user\r\n\r\n    return  (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={ u.photos.small != null ? u.photos.small : userPhoto} className = {styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed \r\n                    ? <button disabled={props.followingInProgress.some(id => id===u.id)} onClick={()=>{\r\n                        \r\n                        props.unfollow(u.id);\r\n                        }\r\n                        \r\n                        }>Unfollow</button> \r\n\r\n\r\n                    : <button disabled={props.followingInProgress.some(id => id===u.id)} onClick={()=>{\r\n                        props.follow(u.id);\r\n                           }}>Follow</button>}\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.coutry\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n    \r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => { \r\n\r\n    return (\r\n            <div>\r\n                 <Paginator currentPage={props.currentPage} totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}\r\n                            onPageChanged={props.onPageChanged}/>\r\n                <div>\r\n                {\r\n                 props.users.map (u => <User user={u} key ={u.id} followingInProgress={props.followingInProgress} \r\n            unfollow={props.unfollow} follow={props.follow}/>)\r\n                 }\r\n                 </div>\r\n            </div>)\r\n    \r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/Spin-1s.b988d774.svg\";","\r\nimport React from \"react\";\r\nimport spinSVG from \"../../../assets/images/Spin-1s.svg\";\r\n\r\nlet Preloader = (props) => {return <img src={spinSVG} /> }\r\n\r\nexport default Preloader;","export const getUsers = (state) =>{\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) =>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalItemsCount = (state) =>{\r\n    return state.usersPage.totalItemsCount;\r\n}\r\nexport const getCurrentPage = (state) =>{\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) =>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) =>{\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, unfollow, toggleFollowingInProgress, getUsersThunkCreator } from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalItemsCount, getUsers } from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor (props) { ///конструктор срабатывает всего один раз когда мы переходим на страницу\r\n        super(props);   ///Их можно не писать потому как больше они ничего не делают\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true);    СТАРЫЙ КОД\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items);        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        //     this.props.toggleIsFetching(false);\r\n        //     });\r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.toggleIsFetching(false);\r\n        // });\r\n    }   \r\n         \r\n    render () {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users totalItemsCount = {this.props.totalItemsCount}\r\n                      onPageChanged = {this.onPageChanged}\r\n                      pageSize = {this.props.pageSize}  \r\n                      currentPage = {this.props.currentPage}\r\n                      users = {this.props.users}\r\n                      unfollow = {this.props.unfollow}\r\n                      follow = {this.props.follow}\r\n                      followingInProgress = {this.props.followingInProgress}\r\n                      />\r\n                      </>\r\n}    \r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {  ///ф-я принимает весь стейт целиком и возвращает объект только с нужными данными \r\n//     return {\r\n//         users: state.usersPage.users,    ///В компоненту USERS прийдут юзери из стейта в пропсах \r\n//         pageSize : state.usersPage.pageSize,\r\n//         totalUsersCount : state.usersPage.totalUsersCount,\r\n//         currentPage : state.usersPage.currentPage,\r\n//         isFetching : state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {  ///ф-я принимает весь стейт целиком и возвращает объект только с нужными данными \r\n        return {\r\n            users: getUsers(state),    ///В компоненту USERS прийдут юзери из стейта в пропсах \r\n            pageSize : getPageSize(state),\r\n            totalItemsCount : getTotalItemsCount(state),\r\n            currentPage : getCurrentPage(state),\r\n            isFetching : getIsFetching(state),\r\n            followingInProgress: getFollowingInProgress(state)\r\n        }\r\n    }\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, {follow, unfollow, toggleFollowingInProgress, getUsers: getUsersThunkCreator})\r\n) (UsersContainer)\r\n\r\n\r\n// export default connect (mapStateToProps, {                                 //Передает стору экшены \r\n//     follow,    //Диспатчим результат работы followAC для userId\r\n//     unfollow, /// была запись unfollow: unfollowAC переименовали unfollowAC в unfollow, поэтому можно указать только unfollow в параметрах\r\n    \r\n    \r\n//     toggleFollowingInProgress,\r\n//     getUsers: getUsersThunkCreator    \r\n// })(authRedirectComponent);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {  //функция которая передает в Users/ колбеки котрые презентационная комп-та может вызывать \r\n//     return {                                 //Передает стору экшены \r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))    //Диспатчим результат работы followAC для userId\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n        \r\n// }\r\n// }","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    initialized: false,\r\n          \r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, \r\n                initialized: true,  // в созданом обьекте data будет лежать id email login (перезатрут ...state)\r\n                }\r\n\r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const initilizedSuccess = () =>{  \r\n        return {type : INITIALIZED_SUCCESS}\r\n  }\r\n\r\nexport const initilizeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData()); //диспатч вернет промис\r\n    //dispatch(somethingElse())\r\n    //dispatch(somethingElse())\r\n    Promise.all ([promise]).then(()=>{\r\n        dispatch(initilizedSuccess())\r\n    }); //Когда все промисы выполнятся, тогда Заиницилизируй\r\n}\r\n  \r\n\r\nexport default appReducer; ","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithKooks = (props) => {\r\n   let [editMode, setEditMode] = useState(false); //это массив из двух значений. [0] Значение [1] функция которая устанавливает это значение\r\n   let [status, setStatus] = useState(props.status);\r\n   \r\n   useEffect( ()=>{           //Вызывается тогда когда изменится статус в пропсах\r\n     setStatus(props.status)\r\n   }, [props.status] )\r\n\r\n\r\n   const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n        \r\n        {!editMode &&\r\n            <div>\r\n            <b>Status: </b>\r\n            <span onDoubleClick={ activateEditMode }>{props.status || \"------\"}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n            <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={status}/>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default ProfileStatusWithKooks;\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateAditMode = () =>{  //метод объявлен с помощью стрелочной ф-и\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateAditMode= () =>{  //метод объявлен с помощью стрелочной ф-и\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status : e.currentTarget.value\r\n    });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState ({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n            <div>\r\n            <span onDoubleClick={this.activateAditMode}>{this.props.status || \"------\"}</span>\r\n            </div>\r\n        }\r\n        {this.state.editMode &&\r\n            <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateAditMode} value={this.state.status} />\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\"\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport stylesEr from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, initialValues, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n    <div><button>Save</button></div>\r\n    {error && <div className={stylesEr.formSummaryError}>{error}</div>}\r\n          <div>\r\n            <b>Full Name: </b> {createField(\"Full Name\", \"fullName\", [], Input,)} \r\n            \r\n          </div>\r\n          <div>\r\n            <b>Looking for a job: </b> {createField(\"\", \"lookingForAJob\", [], Input, {type:\"checkbox\"})} \r\n           \r\n                               \r\n              <div>\r\n                 <b>My Skills: </b> \r\n                 {createField(\"My Skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n             </div>\r\n          </div>\r\n          <div>\r\n            <b>About me: </b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n          </div>\r\n          <div>\r\n            <b>Contacts: </b> {Object.keys(initialValues.contacts).map(key =>{\r\n              return <div key={key} className={styles.contacts}>\r\n              <b>{key}: {createField(key, \"contacts.\"+key, [], Input, Input)}</b></div>\r\n\r\n              // return <Contact key= {key} contactTitle={key} contactValue={props.profileData.contacts[key]} />\r\n            })}\r\n          </div>\r\n        </form>\r\n  }\r\n\r\n  const  ProfileDataFormReduxForm = reduxForm ({form: 'edit-profile'})(ProfileDataForm)\r\n  export default ProfileDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithKooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/noava.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n//const avaimg=\"https://spng.pinpng.com/pngs/s/341-3415688_no-avatar-png-transparent-png.png\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false); //это массив из двух значений. [0] Значение [1] функция которая устанавливает это значение\r\n   \r\n\r\n  ///props.profileData.photos.large\r\n  if (!props.profileData) return <div>Loading...</div>\r\n  let onMainPhotoSelected = (e) => {\r\n      if (e.target.files.length){\r\n        props.savePhoto(e.target.files[0])\r\n              }\r\n  }\r\n  const onSubmit = (formData) =>{\r\n    props.saveProfile(formData).then(\r\n      ()=> {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n    //\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className={styles.mainImgBlock}>\r\n        <img src=\"https://panorama-zanzibar.com/wp-content/uploads/2021/05/Panoram-pic-90_90_1400x697.jpg\"></img>\r\n      </div> */}\r\n      <div className={styles.descriptionBlock}>\r\n        <img src ={props.profileData.photos.large || userPhoto} className={styles.mainPhoto}></img>\r\n        {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n        {editMode ? \r\n\r\n        <ProfileDataFormReduxForm onSubmit={onSubmit} initialValues={props.profileData}/> : \r\n\r\n        <ProfileDatas profileData={props.profileData} isOwner={props.isOwner} \r\n        goToEditMode={()=> {setEditMode(true)}}/>}\r\n        \r\n        <ProfileStatusWithKooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        \r\n       </div>\r\n    </div>\r\n  );\r\n};\r\nconst ProfileDatas = (props) => {\r\n  return <div>\r\n    {props.isOwner &&<div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n          <div>\r\n            <b>Full Name: </b> {props.profileData.fullName}\r\n          </div>\r\n          <div>\r\n            <b>Looking for a job: </b> {props.profileData.lookingForAJob ? \"Yes\" : \"No\"}\r\n            {props.profileData.lookingForAJob &&           \r\n              <div>\r\n                 <b>My Skills: </b> {props.profileData.lookingForAJobDescription}\r\n             </div>}\r\n          </div>\r\n          <div>\r\n            <b>About me: </b> {props.profileData.aboutMe}\r\n          </div>\r\n          <div>\r\n            <b>Contacts: </b> {Object.keys(props.profileData.contacts).map(key =>{\r\n              return <Contact key= {key} contactTitle={key} contactValue={props.profileData.contacts[key]} />\r\n            })}\r\n          </div>\r\n        </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={styles.contacts}> <b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    posts : [\r\n        {id: 1, message:'Hi How AreYou??!', likes: 4},\r\n        {id: 2, message:'Its my first post', likes: 7},\r\n        {id: 3, message:'Its my second post!', likes: 10}\r\n    ],\r\n      profileData: null,\r\n      status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n   \r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {\r\n                id: 6,\r\n                message : action.postText,\r\n                likes : 0\r\n                };\r\n            return {\r\n                ...state, posts: [...state.posts, newPost],\r\n                    };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profileData: action.profileData}\r\n        case SET_STATUS:\r\n                return { ...state, status: action.status}\r\n        case SAVE_PHOTO_SUCCESS:\r\n                return { ...state, profileData: {...state.profileData, photos: action.photos}}\r\n        default:                     ///если совпадений нет вернуть стейт\r\n            return state; \r\n             }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const savePhotoSuccess = (photos) =>{\r\n  return {type : SAVE_PHOTO_SUCCESS, photos}\r\n}\r\nexport const addPostActionCreator = (postText) =>{\r\n    return {type : ADD_POST, postText}\r\n  }\r\nexport const setUsersProfile = (profileData) =>{\r\n    return {type : SET_USER_PROFILE, profileData}\r\n  }\r\nexport const getUsersProfile = (userId) => async(dispatch) =>{\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch (setUsersProfile(response.data));        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n  }\r\nexport const setStatus = (status) =>{\r\n    return {type : SET_STATUS, status}\r\n  }\r\n  export const getUserStatus = (userId) => async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch (setStatus(response.data));        \r\n  }\r\n  export const updateUserStatus = (status) => async (dispatch) =>{ \r\n    let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0){\r\n            dispatch (setStatus(status));\r\n            }\r\n  }\r\n  export const savePhoto = (file) => async (dispatch) =>{ \r\n    let response = await profileAPI.savePhoto(file)\r\n        if (response.data.resultCode === 0){\r\n            dispatch (savePhotoSuccess(response.data.data.photos));\r\n            }\r\n  }\r\n  export const saveProfile = (profile) => async (dispatch, getState) =>{\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n        if (response.data.resultCode === 0){\r\n            dispatch (getUsersProfile(userId));\r\n            }\r\n            else {\r\n              dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n              return Promise.reject(response.data.messages[0])\r\n            }\r\n  }\r\n  \r\n  \r\nexport default profileReducer;","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.items}>\r\n      <img\r\n        className={styles.avaimg}\r\n        src=\"https://spng.pinpng.com/pngs/s/341-3415688_no-avatar-png-transparent-png.png\"\r\n      ></img>\r\n      {props.message}\r\n      <div className={styles.likeBox}>\r\n        <span>Like   {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log(\"RenderPosts\")\r\n  let postsElements= props.posts.map(posts => <Post key={posts.id} id={posts.id} \r\n    message={posts.message} likes={posts.likes} />);\r\n  \r\n  let onAddPost = (postText) => {\r\n     props.addPost(postText.newPostBody);\r\n     }\r\n     \r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={styles.messages}>\r\n        { postsElements }\r\n       </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) =>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea}  name={\"newPostBody\"} validate={[requiredField, maxLength10]} placeholder={\"Enter You Message\"} />\r\n        </div>\r\n        <div>\r\n          <button>Add Post</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm ({form: \"postAddMessageForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postText) => {\r\n    dispatch(addPostActionCreator(postText));\r\n  }\r\n  \r\n}}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./PfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n// console.log(props.profileState.posts)\r\n\r\n  return (\r\n    <div className={styles.profileBox}>\r\n          <ProfileInfo profileData= {props.profileData} saveProfile={props.saveProfile} \r\n          savePhoto={props.savePhoto} isOwner={props.isOwner} status = {props.status} \r\n          updateUserStatus={props.updateUserStatus}/>\r\n          <MyPostsContainer store = {props.store}/>\r\n          </div>\r\n      )}\r\n     \r\n  export default Profile;\r\n\r\n  ","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getUsersProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId; \r\n      \r\n      if (!userId)\r\n      {userId = this.props.auth.userId\r\n        if(!userId){\r\n          this.props.history.push(\"/login\")\r\n        }}\r\n      this.props.getUsersProfile(userId) //санка в редьюсере (которая выполняет ф-и и диспатчит екшеныб который вернет АС)\r\n      this.props.getUserStatus(userId)\r\n  }\r\n    componentDidMount(){\r\n      this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps){\r\n      if (this.props.match.params.userId != prevProps.match.params.userId){\r\n        this.refreshProfile()\r\n      }\r\n    }\r\n      render (){\r\n        \r\n  return (\r\n    <Profile {...this.props} \r\n    isOwner = {!this.props.match.params.userId}\r\n    savePhoto = {this.props.savePhoto}\r\n    profileData={this.props.profileData} \r\n    status={this.props.status} \r\n    updateUserStatus={this.props.updateUserStatus}/>\r\n          )    }\r\n}\r\n// profileData={this.props.profileData}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profileData : state.profilePage.profileData,\r\n  status: state.profilePage.status,\r\n  auth : state.auth\r\n})\r\n// let adress = useParams().id;\r\n// console.log(adress)\r\nexport default compose (\r\n  connect(mapStateToProps, {getUsersProfile, getUserStatus , updateUserStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n// let authRedirectComponent = withAuthRedirect (ProfileContainer);\r\n\r\n// let WithUrlDataContainerComponent = withRouter (authRedirectComponent)\r\n// export default connect(mapStateToProps, {getUsersProfile} )(WithUrlDataContainerComponent);","import React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport {login, logout} from \"../../redux/auth-reducer\" \r\nimport { connect } from \"react-redux\";\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst maxLength20 = maxLengthCreator (20);\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) =>{\r\n    return(\r\n    <form onSubmit={handleSubmit}>\r\n        {createField(\"Email\", \"email\", [requiredField, maxLength20], Input)}\r\n        {createField(\"Password\", \"password\", [requiredField, maxLength20], Input, {type: \"password\"})}\r\n        {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember Me\")}\r\n        \r\n        {captchaURL && <img src={captchaURL}/>}\r\n        {captchaURL && createField(\"Symbols of captcha\", \"captcha\", [requiredField], Input, {})}\r\n\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm ({\r\n    form: 'login' //Уникальное строковое имя формы (не связано с form в redux-store)\r\n})(LoginForm) //форма вокруг которой нужно создать редакс форму\r\n\r\nconst Login = (props) =>{\r\n    \r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha) //Передать колбек в санкриейтор\r\n    }\r\n    \r\n    if (props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL}/>\r\n         </div> \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaURL: state.auth.captchaURL,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login, logout})(Login); //Коннект создаст колбек с таким же именемм login","import React, { Component, Suspense } from \"react\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/Header/HeaderContainer.jsx\";\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\"\nimport {initilizeApp} from \"./redux/app-reducer\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport LoginPage from \"./components/Login/login\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {withRouter} from \"react-router-dom\"\nimport Preloader from \"./components/common/Preloader/Preloader\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends Component {\n  catchAllUnhandledErrors = (PromiseRejectionEvent) => {\n    alert (PromiseRejectionEvent)\n  }\n  componentDidMount (){\n    this.props.initilizeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n  }\n  render(){  \n    if(!this.props.initialized) {\n      return <Preloader/>\n    }\n  return (\n    \n    //Создаем врапер в нем хедер, сайд бар и контент  dialogsState={props.state.dialogPage}\n    \n    <div className='app-wrapper'>\n      <HeaderContainer />\n      <Navbar />\n        <div className='app-wrapper-content'>\n        \n        <Route path='/' \n          render ={ () => <Redirect to={\"/profile\"} />}/> \n\n        <Route path='/profile/:userId?' \n          render ={ () => <ProfileContainer/>}/>  \n        <Route path='/dialogs' \n          render ={() => {return (\n            <div>\n              <Suspense fallback={<div>Загрузка...</div>}>\n              <DialogsContainer />\n              </Suspense>\n            </div>\n          );}\n          }/> \n        <Route path='/news' \n          render={() =><News />}/>\n        <Route path='/music' \n          render={() =><Music />}/>\n        <Route path='/users' \n               render ={() => <UsersContainer />}/>\n        <Route path='/settings' \n          render={() =><Settings />}/>\n        <Route path='/login' \n          render={() =><LoginPage />}/>\n        {/* <Route path='*' \n          render={() =><div>404. Page Not Found</div>}/> */}\n        \n      </div>\n    </div>\n   \n  );\n}\n};\n///<Route path='/profile/:userId' element ={<ProfileContainer/>}/>\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\nexport default compose(withRouter ,\n  connect (mapStateToProps, {initilizeApp}))(App);\n\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage : profileReducer,  /// Созданые ветки нашего стора\r\n    dialogPage : dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n///let store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux'\n\n///let renderEntireTree = () => {\n///old app props state={state} dispatch={store.dispatch.bind(store)} store={store}\n  ReactDOM.render(\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n         <Provider store={store}>\n             <App  />   \n         </Provider>\n      </BrowserRouter>, document.getElementById('root'));\n///}\n///renderEntireTree();\n// store.subscribe(() => {renderEntireTree();});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3EWLf\",\"mainImgBlock\":\"ProfileInfo_mainImgBlock__-YvI-\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1UNGY\",\"contacts\":\"ProfileInfo_contacts__2s9Yu\"};","export const requiredField = (value) =>{\r\n    if (value) return undefined;\r\n        return \"Fields can not to be Null\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n        return undefined\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom' \r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n                 return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__xyL30\",\"likeBox\":\"Post_likeBox__3YnAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25eA8\",\"loginBlock\":\"Header_loginBlock__3EKRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__Hjis1\",\"selectedPage\":\"Paginator_selectedPage__302cA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"MyPosts_items__3Mm9p\",\"postsBlock\":\"MyPosts_postsBlock__30kJr\",\"messages\":\"MyPosts_messages__2oiDz\"};"],"sourceRoot":""}