{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/Users.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","assets/images/coffee.png","components/Header/Header.jsx","API/api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/noava.png","components/Users/User.jsx","components/Users/Users.jsx","assets/images/Spin-1s.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/app-reducer.js","components/Profile/PfileInfo/ProfileStatusWithHooks.jsx","components/Profile/PfileInfo/ProfileStatus.jsx","components/Profile/PfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/login.jsx","App.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Profile/PfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["SEND_MESSAGE","initialState","messagesData","id","message","dialogData","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","validators","component","text","validate","Header","header","src","HeaderImg","loginBlock","isAuth","login","onClick","logout","to","itance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","users","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","totalItemsCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","reaultCode","usersReducer","followed","count","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","disabled","some","Users","Preloader","spinSVG","usersPage","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","compose","withAuthRedirect","bind","totalCount","INITIALIZED_SUCCESS","initialized","appReducer","ProfileStatusWithKooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profileData","descriptionBlock","large","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likes","profileReducer","newPost","postText","Post","avaimg","likeBox","maxLength10","maxLengthCreator","MyPosts","memo","console","log","postsElements","postsBlock","AddPostFormRedux","onSubmit","addPost","newPostBody","messages","reduxForm","form","handleSubmit","Field","requiredField","MyPostsContainer","profilePage","newPostText","addPostActionCreator","Profile","profileBox","store","ProfileContainer","match","params","history","getUsersProfile","getUserStatus","withRouter","maxLength20","LoginReduxForm","style","formSummaryError","length","stopSubmit","_error","formData","DialogsContainer","lazy","App","initilizeApp","path","render","fallback","app","promise","Promise","all","reducers","combineReducers","dialogPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","maxLength","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.099d4cca.chunk.js","sourcesContent":["\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {  \r\n  messagesData : [\r\n       { id: 1, message: \"Hi!\" },\r\n       { id: 2, message: \"How are you?\" },\r\n       { id: 3, message: \"Yo man!\" }\r\n     ],\r\n   dialogData : [\r\n       { name: \"Dima\", id: 1 },\r\n       { name: \"Sasha\", id: 2 },\r\n       { name: \"Maxx\", id: 3 },\r\n       { name: \"Frank\", id: 4 },\r\n       { name: \"Vatson\", id: 5 }\r\n     ],\r\n }\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  let stateCopy={...state};\r\n  //stateCopy.messagesData=[...state.messagesData];\r\n  switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n              ...state,\r\n              messagesData: [ ...state.messagesData, {id: 4, message : body} ] \r\n            }\r\n        \r\n        default:\r\n            return state;\r\n\r\n    }\r\n    }\r\n  \r\n///Create action SendMessage containers\r\nexport const sendMessageCreator = (newMessageBody) =>{\r\n    return {type : SEND_MESSAGE, newMessageBody}\r\n  }\r\n  \r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3DEyb\",\"selectedPage\":\"Users_selectedPage__1eV-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"Profile_profileBox__1NqBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1OuOu\",\"item\":\"Navbar_item__3AYK0\",\"active\":\"Navbar_active__1Ha9d\"};","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}) =>{ //деструктуризировать из пропс инпут и мета, и остаток пропс\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) =>{ //деструктуризировать из пропс инпут и мета, и остаток пропс\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} \r\n        name={name} validate={validators} component={component} {...props}/> {text}\r\n    </div>)\r\n","export default __webpack_public_path__ + \"static/media/coffee.75f4050a.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from './Header.module.css';\r\nimport HeaderImg from \"./../../../src/assets/images/coffee.png\" \r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n    <img src={HeaderImg}></img> \r\n    <div className={styles.loginBlock}>\r\n      {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button> </div> :\r\n      <NavLink to='/login'>Login</NavLink> }\r\n    </div>\r\n  </header>\r\n  )}\r\n///https://img.icons8.com/dusk/344/kawaii-coffee.png\r\n  export default Header;\r\n\r\n  ","import * as axios from \"axios\"\r\n\r\nconst itance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\" : \"d9eea707-3f90-4d7c-91bc-e65897e18db0\"},\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/'\r\n}\r\n); \r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) { //Принимает значения от того кто вызывает ф-ю(а там она в пропсах)\r\n    return itance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data) //верни из запроса response.data\r\n    },\r\n    follow(userId) {\r\n        return itance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return itance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return itance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return itance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return itance.put(`profile/status/`, {status:status})\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return itance.get(`auth/me`);\r\n                },\r\n    login (email, password, rememberMe = false) {\r\n        return itance.post(`auth/login`, {email, password, rememberMe});\r\n            },\r\n    logout () {\r\n        return itance.delete(`auth/login`);\r\n             }\r\n\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth : false\r\n    \r\n      \r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, \r\n                ...action.payload,  // в созданом обьекте data будет лежать id email login (перезатрут ...state)\r\n                }\r\n\r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>{  \r\n        return {type : SET_USER_DATA, payload : {userId, email, login, isAuth}}\r\n  }\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n        if(response.data.resultCode === 0) { \r\n              let {id, login, email} = response.data.data \r\n              dispatch(setAuthUserData(id, email, login, true)); \r\n            }\r\n           \r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async(dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData()); \r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some err\" //сообщение -ответ сервера об ошибке (первое значение массива ответа)\r\n                let action = stopSubmit(\"login\", {_error: message});//стопаем всю форму с сообщением ошибки\r\n                dispatch(action);\r\n            }\r\n            \r\n}\r\nexport const logout = () => async(dispatch) => {\r\n    let response = await authAPI.logout()\r\n        if(response.data.resultCode === 0) { \r\n            dispatch(setAuthUserData(null, null, null, false)); \r\n            }            \r\n}\r\n\r\n  \r\n\r\nexport default authReducer; ","import React from \"react\";\r\nimport Header from \"./Header\"\r\nimport { connect } from \"react-redux\";\r\nimport {logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    ///this.props.toggleIsFetching(true);\r\n    // authAPI.me().then(response => {\r\n        \r\n    // if(response.data.resultCode === 0) { //resultCode === 0 - если сервер ответил что мы залогинены \r\n    //       let {id, login, email} = response.data.data //Взять данные переменных из responce.data \r\n    //       this.props.setAuthUserData(id, email, login);  //отдать редьюсеру значения. Последовательность важна (как в редьюсере)\r\n    //     }\r\n    //    // this.props.setUsers(response.data.items);        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n    //    // this.props.setTotalUsersCount(response.data.totalCount);\r\n    //    /// this.props.toggleIsFetching(false);\r\n    //     });\r\n  \r\n  \r\n  render () {\r\n    return <Header {...this.props} />\r\n  }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth : state.auth.isAuth,  //auth в редакс сторе. Передаем пропсами в Контейнер и в хедер для отображения\r\n  login : state.auth.login\r\n});\r\nexport default connect (mapStateToProps, {logout})(HeaderContainer);\r\n\r\n  ","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={`${styles.item} ${styles.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.active}>Users</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/news\" activeClassName={styles.active}>News</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/music\" activeClassName={styles.active}>Music</NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n///<NavLink to=\"/settings\" className={({ isActive }) => (isActive ? styles.active : '')}>Settings</NavLink>","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n        News\r\n        </div>\r\n    )\r\n}\r\n    export default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n        Music\r\n        </div>\r\n    )\r\n}\r\n    export default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n        Settings\r\n        </div>\r\n    )\r\n}\r\n    export default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\nitems.users.map(u => { \r\n    if(u[objPropName] === itemId){\r\n        return {...u, ...newObjProps} \r\n    } \r\n    return u; \r\n\r\n})\r\n\r\n}","import { usersAPI } from \"../API/api\"\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    users : [],\r\n    pageSize : 5,\r\n    totalItemsCount : 0,\r\n    currentPage : 1,\r\n    isFetching : false,\r\n    followingInProgress: []\r\n    // users : [\r\n    //     {id: 1, photoUrl: 'https://pngimg.com/uploads/cat/cat_PNG50549.png', followed: true, fullNAme:'Alex', status: 'HappyNow!', location:{city: 'ZP', country:'UA'} },\r\n    //     {id: 2, photoUrl: 'https://pngimg.com/uploads/cat/cat_PNG50547.png', followed: false, fullNAme:'Dima', status: 'Jahoo!', location:{city: 'DP', country:'UA'} },\r\n    //     {id: 3, photoUrl: 'https://pngimg.com/uploads/cat/cat_PNG50533.png', followed: true, fullNAme:'Maximus', status: 'YoMan!', location:{city: 'ZP', country:'UA'} },\r\n    // ],\r\n     \r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n   \r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        }\r\n        case UNFOLLOW:\r\n            return {...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users} //взять копию старых Юзеров и дописать их из экшена. ТАк как их много, ставим спрет опер-р\r\n        \r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return { ...state, totalItemsCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return { ...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(id => id !== action.userId) }\r\n                    \r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const followSuccess = (userId) =>{  //follow action creator - Чистая функция которая возвращает экшн\r\n    return {type : FOLLOW, userId}\r\n  }\r\nexport const unfollowSuccess = (userId) =>{\r\n    return {type : UNFOLLOW, userId}\r\n  }\r\n\r\nexport const setUsers = (users) => { //AC котрый будет устанавливать юзеров\r\n    return {type : SET_USERS, users}\r\n}\r\nexport const setCurrentPage = (currentPage) =>{\r\n    return {type : SET_CURRENT_PAGE, currentPage}\r\n  }\r\nexport const setTotalItemsCount = (totalItemsCount) =>{\r\n    return {type : SET_TOTAL_COUNT, count:totalItemsCount} \r\n}\r\nexport const toggleIsFetching = (isFetching) =>{\r\n    return {type : TOGGLE_IS_FETCHING, isFetching} \r\n}\r\nexport const toggleFollowingInProgress = (isFetching, userId) =>{\r\n    return {type : TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} \r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\nreturn async(dispatch) => {\r\n            dispatch (toggleIsFetching(true));\r\n            dispatch(setCurrentPage(currentPage));\r\n\r\n            let data = await usersAPI.getUsers(currentPage, pageSize);\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n            dispatch(setTotalItemsCount(data.totalCount));\r\n        }\r\n}\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch (toggleFollowingInProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n        if (response.data.reaultCode === 0){\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n        }\r\n    }\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n            }\r\n        }\r\n\r\nexport default usersReducer; ","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize/100);\r\n        let pages = [] ; //создаем пкстой массив для страниц\r\n        for (let i=1; i <= pagesCount; i++){ // забиваем кол-во страниц в массив\r\n            pages.push(i);\r\n        }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize ;\r\n\r\n    return <div>\r\n            {portionNumber > 1 && \r\n            <button onClick={()=> {setPortionNumber(portionNumber-1) }}>Prev</button>}\r\n\r\n                {pages.filter(p=> p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                        .map((p) => {\r\n                            return <span className={cn ({\r\n                                [styles.selectedPage]: currentPage === p \r\n                            }, styles.pageNumber) }\r\n                            key = {p}\r\n                            onClick={(e)=> {\r\n                                onPageChanged(p);\r\n                            }}>{p}  </span> \r\n                        })}\r\n            {portionCount > portionNumber && \r\n                <button onClick={()=> {setPortionNumber(portionNumber+1)}}>Next</button>}\r\n            </div>\r\n            \r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/noava.ca1de5bf.png\";","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from \"./../../../src/assets/images/noava.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = (props) => {  \r\n    let u = props.user\r\n    return  (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={ u.photos.small != null ? u.photos.small : userPhoto} className = {styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed \r\n                    ? <button disabled={props.followingInProgress.some(id => id===u.id)} onClick={()=>{\r\n                        \r\n                        props.unfollow(u.id);\r\n                        }\r\n                        \r\n                        }>Unfollow</button> \r\n\r\n\r\n                    : <button disabled={props.followingInProgress.some(id => id===u.id)} onClick={()=>{\r\n                        props.follow(u.id);\r\n                           }}>Follow</button>}\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.coutry\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n    \r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {  \r\n    return (\r\n            <div>\r\n                 <Paginator currentPage={props.currentPage} totalItemsCount={props.totalItemsCount} pageSize={props.pageSize}\r\n                            onPageChanged={props.onPageChanged}/>\r\n                <div>\r\n                {\r\n                 props.users.map (u => <User user={u} key ={u.id} followingInProgress={props.followingInProgress} \r\n            unfollow={props.unfollow} follow={props.follow}/>)\r\n                 }\r\n                 </div>\r\n            </div>)\r\n    \r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/Spin-1s.b988d774.svg\";","\r\nimport React from \"react\";\r\nimport spinSVG from \"../../../assets/images/Spin-1s.svg\";\r\n\r\nlet Preloader = (props) => {return <img src={spinSVG} /> }\r\n\r\nexport default Preloader;","export const getUsers = (state) =>{\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) =>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalItemsCount = (state) =>{\r\n    return state.usersPage.totalItemsCount;\r\n}\r\nexport const getCurrentPage = (state) =>{\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) =>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) =>{\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, toggleFollowingInProgress, getUsersThunkCreator } from \"../../redux/users-reducer\";\r\nimport { unfollow } from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalItemsCount, getUsers } from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor (props) { ///конструктор срабатывает всего один раз когда мы переходим на страницу\r\n        super(props);   ///Их можно не писать потому как больше они ничего не делают\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true);    СТАРЫЙ КОД\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items);        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n        //     this.props.setTotalUsersCount(data.totalCount);\r\n        //     this.props.toggleIsFetching(false);\r\n        //     });\r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.toggleIsFetching(false);\r\n        // });\r\n    }   \r\n         \r\n    render () {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users totalItemsCount = {this.props.totalItemsCount}\r\n                      onPageChanged = {this.onPageChanged}\r\n                      pageSize = {this.props.pageSize}  \r\n                      currentPage = {this.props.currentPage}\r\n                      users = {this.props.users}\r\n                      unfollow = {this.props.unfollow}\r\n                      follow = {this.props.follow}\r\n                      followingInProgress = {this.props.followingInProgress}\r\n                      />\r\n                      </>\r\n}    \r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {  ///ф-я принимает весь стейт целиком и возвращает объект только с нужными данными \r\n//     return {\r\n//         users: state.usersPage.users,    ///В компоненту USERS прийдут юзери из стейта в пропсах \r\n//         pageSize : state.usersPage.pageSize,\r\n//         totalUsersCount : state.usersPage.totalUsersCount,\r\n//         currentPage : state.usersPage.currentPage,\r\n//         isFetching : state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {  ///ф-я принимает весь стейт целиком и возвращает объект только с нужными данными \r\n        return {\r\n            users: getUsers(state),    ///В компоненту USERS прийдут юзери из стейта в пропсах \r\n            pageSize : getPageSize(state),\r\n            totalItemsCount : getTotalItemsCount(state),\r\n            currentPage : getCurrentPage(state),\r\n            isFetching : getIsFetching(state),\r\n            followingInProgress: getFollowingInProgress(state)\r\n        }\r\n    }\r\n\r\nexport default compose (\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, {follow, unfollow, toggleFollowingInProgress, getUsers: getUsersThunkCreator})\r\n) (UsersContainer)\r\n\r\n\r\n// export default connect (mapStateToProps, {                                 //Передает стору экшены \r\n//     follow,    //Диспатчим результат работы followAC для userId\r\n//     unfollow, /// была запись unfollow: unfollowAC переименовали unfollowAC в unfollow, поэтому можно указать только unfollow в параметрах\r\n    \r\n    \r\n//     toggleFollowingInProgress,\r\n//     getUsers: getUsersThunkCreator    \r\n// })(authRedirectComponent);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {  //функция которая передает в Users/ колбеки котрые презентационная комп-та может вызывать \r\n//     return {                                 //Передает стору экшены \r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))    //Диспатчим результат работы followAC для userId\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n        \r\n// }\r\n// }","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    initialized: false,\r\n          \r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, \r\n                initialized: true,  // в созданом обьекте data будет лежать id email login (перезатрут ...state)\r\n                }\r\n\r\n        default:                     ///если совпадений нет вернуть стейт\r\n        return state;\r\n            }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const initilizedSuccess = () =>{  \r\n        return {type : INITIALIZED_SUCCESS}\r\n  }\r\n\r\nexport const initilizeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData()); //диспатч вернет промис\r\n    //dispatch(somethingElse())\r\n    //dispatch(somethingElse())\r\n    Promise.all ([promise]).then(()=>{\r\n        dispatch(initilizedSuccess())\r\n    }); //Когда все промисы выполнятся, тогда Заиницилизируй\r\n}\r\n  \r\n\r\nexport default appReducer; ","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithKooks = (props) => {\r\n   let [editMode, setEditMode] = useState(false); //это массив из двух значений. [0] Значение [1] функция которая устанавливает это значение\r\n   let [status, setStatus] = useState(props.status);\r\n   \r\n   useEffect( ()=>{           //Вызывается тогда когда изменится статус в пропсах\r\n     setStatus(props.status)\r\n   }, [props.status] )\r\n\r\n\r\n   const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n            <div>\r\n            <span onDoubleClick={ activateEditMode }>{props.status || \"------\"}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n            <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={status}/>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default ProfileStatusWithKooks;\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateAditMode = () =>{  //метод объявлен с помощью стрелочной ф-и\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateAditMode= () =>{  //метод объявлен с помощью стрелочной ф-и\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status : e.currentTarget.value\r\n    });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState ({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n            <div>\r\n            <span onDoubleClick={this.activateAditMode}>{this.props.status || \"------\"}</span>\r\n            </div>\r\n        }\r\n        {this.state.editMode &&\r\n            <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateAditMode} value={this.state.status} />\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithKooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst avaimg=\"https://spng.pinpng.com/pngs/s/341-3415688_no-avatar-png-transparent-png.png\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  ///props.profileData.photos.large\r\n  if (!props.profileData) return <div>Loading...</div>\r\n  return (\r\n    <div>\r\n      {/* <div className={styles.mainImgBlock}>\r\n        <img src=\"https://panorama-zanzibar.com/wp-content/uploads/2021/05/Panoram-pic-90_90_1400x697.jpg\"></img>\r\n      </div> */}\r\n      <div className={styles.descriptionBlock}>\r\n        <img src ={props.profileData.photos.large}></img>\r\n        <ProfileStatusWithKooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        <a>Ava</a>\r\n        <img src={avaimg}></img>\r\n       </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import { profileAPI, usersAPI } from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\n\r\nlet initialState = {    //стартовые входные данные \r\n    posts : [\r\n        {id: 1, message:'Hi How AreYou??!', likes: 4},\r\n        {id: 2, message:'Its my first post', likes: 7},\r\n        {id: 3, message:'Its my second post!', likes: 10}\r\n    ],\r\n      profileData: null,\r\n      status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {   ////если в стейт ничего не приходит, возми данные из initialState \r\n   \r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {\r\n                id: 6,\r\n                message : action.postText,\r\n                likes : 0\r\n                };\r\n            return {\r\n                ...state, posts: [...state.posts, newPost],\r\n                    };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profileData: action.profileData}\r\n        case SET_STATUS:\r\n                return { ...state, status: action.status}\r\n        default:                     ///если совпадений нет вернуть стейт\r\n            return state; \r\n             }\r\n}\r\n///Создаем экшн криейтеры (ниже)\r\nexport const addPostActionCreator = (postText) =>{\r\n    return {type : ADD_POST, postText}\r\n  }\r\nexport const setUsersProfile = (profileData) =>{\r\n    return {type : SET_USER_PROFILE, profileData}\r\n  }\r\nexport const getUsersProfile = (userId) => async(dispatch) =>{\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch (setUsersProfile(response.data));        ////серvер вышлет в респонс Пользователей (приходят из response.data.items) и мы засетим их в пропс\r\n  }\r\nexport const setStatus = (status) =>{\r\n    return {type : SET_STATUS, status}\r\n  }\r\n  export const getUserStatus = (userId) => async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch (setStatus(response.data));        \r\n  }\r\n  export const updateUserStatus = (status) => async (dispatch) =>{ ///\r\n    let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0){\r\n            dispatch (setStatus(status));\r\n            }\r\n  }\r\n  \r\n  \r\nexport default profileReducer;","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.items}>\r\n      <img\r\n        className={styles.avaimg}\r\n        src=\"https://spng.pinpng.com/pngs/s/341-3415688_no-avatar-png-transparent-png.png\"\r\n      ></img>\r\n      {props.message}\r\n      <div className={styles.likeBox}>\r\n        <span>Like   {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log(\"RenderPosts\")\r\n  let postsElements= props.posts.map(posts => <Post id={posts.id} \r\n    message={posts.message} likes={posts.likes} />);\r\n  \r\n  let onAddPost = (postText) => {\r\n     props.addPost(postText.newPostBody);\r\n     }\r\n     \r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={styles.messages}>\r\n        { postsElements }\r\n       </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) =>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea}  name={\"newPostBody\"} validate={[requiredField, maxLength10]} placeholder={\"Enter You Message\"} />\r\n        </div>\r\n        <div>\r\n          <button>Add Post</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\nconst AddPostFormRedux = reduxForm ({form: \"postAddMessageForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postText) => {\r\n    dispatch(addPostActionCreator(postText));\r\n  }\r\n  \r\n}}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./PfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n// console.log(props.profileState.posts)\r\n\r\n  return (\r\n    <div className={styles.profileBox}>\r\n          <ProfileInfo profileData= {props.profileData} status = {props.status} updateUserStatus={props.updateUserStatus}/>\r\n          <MyPostsContainer store = {props.store}/>\r\n          </div>\r\n      )}\r\n     \r\n  export default Profile;\r\n\r\n  ","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getUsersProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount(){\r\n      let userId = this.props.match.params.userId; \r\n      \r\n      if (!userId)\r\n      {userId = this.props.auth.userId\r\n        if(!userId){\r\n          this.props.history.push(\"/login\")\r\n        }}\r\n      this.props.getUsersProfile(userId) //санка в редьюсере (которая выполняет ф-и и диспатчит екшеныб который вернет АС)\r\n      this.props.getUserStatus(userId)\r\n      \r\n    }\r\n      render (){\r\n        \r\n  return (\r\n    <Profile {...this.props} profileData={this.props.profileData} status={this.props.status} \r\n    updateUserStatus={this.props.updateUserStatus}/>\r\n          )    }\r\n}\r\n// profileData={this.props.profileData}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profileData : state.profilePage.profileData,\r\n  status: state.profilePage.status,\r\n  auth : state.auth\r\n})\r\n// let adress = useParams().id;\r\n// console.log(adress)\r\nexport default compose (\r\n  connect(mapStateToProps, {getUsersProfile, getUserStatus , updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n// let authRedirectComponent = withAuthRedirect (ProfileContainer);\r\n\r\n// let WithUrlDataContainerComponent = withRouter (authRedirectComponent)\r\n// export default connect(mapStateToProps, {getUsersProfile} )(WithUrlDataContainerComponent);","import React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport {login, logout} from \"../../redux/auth-reducer\" \r\nimport { connect } from \"react-redux\";\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst maxLength20 = maxLengthCreator (20);\r\nconst LoginForm = ({handleSubmit, error}) =>{\r\n    return(\r\n    <form onSubmit={handleSubmit}>\r\n        {createField(\"Email\", \"email\", [requiredField, maxLength20], Input)}\r\n        {createField(\"Password\", \"password\", [requiredField, maxLength20], Input, {type: \"password\"})}\r\n        {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember Me\")}\r\n        \r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm ({\r\n    form: 'login' //Уникальное строковое имя формы (не связано с form в redux-store)\r\n})(LoginForm) //форма вокруг которой нужно создать редакс форму\r\n\r\nconst Login = (props) =>{\r\n    \r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe) //Передать колбек в санкриейтор\r\n    }\r\n    \r\n    if (props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n         </div> \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login, logout})(Login); //Коннект создаст колбек с таким же именемм login","import React, { Component, Suspense } from \"react\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/Header/HeaderContainer.jsx\";\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\"\nimport {initilizeApp} from \"./redux/app-reducer\";\nimport { Route } from \"react-router-dom\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport LoginPage from \"./components/Login/login\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {withRouter} from \"react-router-dom\"\nimport Preloader from \"./components/common/Preloader/Preloader\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends Component {\n  componentDidMount (){\n    this.props.initilizeApp();\n}\n///store={props.store}\n  render(){  \n    if(!this.props.initialized) {\n      return <Preloader/>\n    }\n  return (\n    \n    //Создаем врапер в нем хедер, сайд бар и контент  dialogsState={props.state.dialogPage}\n    \n    <div className='app-wrapper'>\n      <HeaderContainer />\n      <Navbar />\n        <div className='app-wrapper-content'>\n        \n        <Route path='/profile/:userId?' \n          render ={ () => <ProfileContainer/>}/>  \n        <Route path='/dialogs' \n          render ={() => {return (\n            <div>\n              <Suspense fallback={<div>Загрузка...</div>}>\n              <DialogsContainer />\n              </Suspense>\n            </div>\n          );}\n          }/> \n        <Route path='/news' \n          render={() =><News />}/>\n        <Route path='/music' \n          render={() =><Music />}/>\n        <Route path='/users' \n               render ={() => <UsersContainer />}/>\n        <Route path='/settings' \n          render={() =><Settings />}/>\n        <Route path='/login' \n          render={() =><LoginPage />}/>\n        \n      </div>\n    </div>\n   \n  );\n}\n};\n///<Route path='/profile/:userId' element ={<ProfileContainer/>}/>\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\nexport default compose(withRouter ,\n  connect (mapStateToProps, {initilizeApp}))(App);\n\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage : profileReducer,  /// Созданые ветки нашего стора\r\n    dialogPage : dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n///let store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux'\n\n///let renderEntireTree = () => {\n///old app props state={state} dispatch={store.dispatch.bind(store)} store={store}\n  ReactDOM.render(\n      <BrowserRouter>\n         <Provider store={store}>\n             <App  />   \n         </Provider>\n      </BrowserRouter>, document.getElementById('root'));\n///}\n///renderEntireTree();\n// store.subscribe(() => {renderEntireTree();});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1a4M6\",\"error\":\"FormsControls_error__2XdUt\",\"formSummaryError\":\"FormsControls_formSummaryError__2vLl-\"};","export const requiredField = (value) =>{\r\n    if (value) return undefined;\r\n        return \"Fields can not to be Null\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n        return undefined\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom' \r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n                 return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3EWLf\",\"mainImgBlock\":\"ProfileInfo_mainImgBlock__-YvI-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__xyL30\",\"likeBox\":\"Post_likeBox__3YnAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25eA8\",\"loginBlock\":\"Header_loginBlock__3EKRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__Hjis1\",\"selectedPage\":\"Paginator_selectedPage__302cA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"MyPosts_items__3Mm9p\",\"postsBlock\":\"MyPosts_postsBlock__30kJr\",\"messages\":\"MyPosts_messages__2oiDz\"};"],"sourceRoot":""}