{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","isActive","active","name","Messages","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","state","dialogPage","DialogElements","dialogData","map","MessageElements","messagesData","messageText","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kFCiBpMC,EAdI,SAACC,GAClB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACE,qBAAKC,UAAWC,IAAOC,OAAvB,SACE,cAAC,IAAD,CACEC,GAAIL,EACJE,UAAW,qBAAGI,SAA2BH,IAAOI,OAAS,YAF3D,SAIGR,EAAMS,UCAAC,EATE,SAACV,GAEhB,OAAO,8BACL,qBAAKG,UAAWC,IAAOO,QAAvB,SAAiCX,EAAMW,a,yCCmCrCC,EAAcC,YAAiB,IAW/BC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAVL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACA,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeX,GAAeH,KAAM,iBAAkBe,YAAa,wBAE5G,8BAAK,kDAMMC,EA7CC,SAACzB,GAEf,IAAI0B,EAAM1B,EAAM2B,WAEZC,EAAiBF,EAAMG,WAAWC,KAAI,SAACzB,GAAD,OACxC,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAsBP,GAAIG,EAAOH,IAAtBG,EAAOH,OAGzC6B,EAAkBL,EAAMM,aAAaF,KAAI,SAACG,GAAD,OAC3C,cAAC,EAAD,CAAUtB,QAASsB,EAAYtB,QAA8BT,GAAI+B,EAAY/B,IAAhC+B,EAAY/B,OAO3D,OAAKF,EAAMkC,OAGT,sBAAK/B,UAAWC,IAAO+B,QAAvB,UACE,qBAAKhC,UAAWC,IAAOgC,aAAvB,SAAsCR,IAEtC,qBAAKzB,UAAWC,IAAOiC,SAAvB,SACE,8BAAMN,MAGT,cAACjB,EAAD,CAAqBG,SAfJ,SAACqB,GACnBtC,EAAMuC,YAAYD,EAAOE,sBAID,cAAC,IAAD,CAAUlC,GAAI,Y,iCCH3BmC,sBACbC,aAhBoB,SAAChB,GACrB,MAAO,CACPC,WAAYD,EAAMC,eAKK,SAACgB,GACxB,MAAO,CAEPJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAM9BK,IAFaJ,CAIZhB","file":"static/js/3.585f2318.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1QGRD\",\"dialogsItems\":\"Dialogs_dialogsItems__wkOQt\",\"dialog\":\"Dialogs_dialog__CY9X6\",\"active\":\"Dialogs_active__3zB6M\",\"messages\":\"Dialogs_messages__2464a\",\"message\":\"Dialogs_message__28oB4\"};","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink\r\n        to={path}\r\n        className={({ isActive }) => (isActive ? styles.active : \"inactive\")}\r\n      >\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\nconst Messages = (props) => {\r\n  \r\n  return <div>\r\n    <div className={styles.message}>{props.message}</div>\r\n          </div>\r\n};\r\n\r\n\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Messages from \"./Messages/Messages\"\r\nimport {Redirect} from 'react-router-dom' \r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n \r\n  let state=props.dialogPage;\r\n\r\n  let DialogElements = state.dialogData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n  \r\n  let MessageElements = state.messagesData.map((messageText) => (\r\n    <Messages message={messageText.message} key={messageText.id} id={messageText.id} />\r\n  ));\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  };\r\n  \r\n \r\n  if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n  \r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{DialogElements}</div>\r\n\r\n      <div className={styles.messages}>\r\n        <div>{MessageElements}</div>\r\n\r\n        </div>\r\n     <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) =>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}> \r\n    <div>\r\n      <Field component={Textarea} validate={[requiredField, maxLength10 ]} name={\"newMessageBody\"} placeholder={\"Enter You Message\"} />\r\n    </div>\r\n    <div><button>Send</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm ({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\"\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\"\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  dialogPage: state.dialogPage,        ///Перерисуй Диалоги когда изменится state.dialogPage \r\n  \r\n  \r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   \r\n  sendMessage: (newMessageBody) =>{\r\n    dispatch(sendMessageCreator(newMessageBody))\r\n  }\r\n}\r\n}\r\nexport default compose(\r\n  connect (mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n  )\r\n  (Dialogs);\r\n\r\n// let authRedirectComponent = withAuthRedirect (Dialogs);\r\n// const DialogsContainer = connect (mapStateToProps, mapDispatchToProps)(authRedirectComponent);\r\n\r\n// export default dDialogsContainer;\r\n"],"sourceRoot":""}